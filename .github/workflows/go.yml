name: Go Multi-Platform Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            extension: ""
          - os: windows
            arch: amd64
            extension: ".exe"
          - os: darwin
            arch: amd64
            extension: ""
          - os: darwin
            arch: arm64
            extension: ""

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -v -o CelesTLSH-CLI${{ matrix.extension }} ./src

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CelesTLSH-CLI-${{ matrix.os }}-${{ matrix.arch }}
          path: CelesTLSH-CLI${{ matrix.extension }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: release

      - name: Prepare release assets
        run: |
          mkdir assets
          for dir in release/*; do
            cp "$dir"/* assets/
          done

      - name: Create Release with binaries
        uses: softprops/action-gh-release@v1
        with:
          files: assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
