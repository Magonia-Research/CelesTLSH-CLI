name: Go Multi-Platform Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'  # Run workflow on version tags, e.g. v1.0.0
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            extension: ""
          - os: windows
            arch: amd64
            extension: ".exe"
          - os: darwin
            arch: amd64
            extension: ""
          - os: darwin
            arch: arm64
            extension: ""

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0  # Disable CGo
      run: |
        # Build from the src directory
        go build -v -o CelesTLSH-CLI${{ matrix.extension }} ./src
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: CelesTLSH-CLI-${{ matrix.os }}-${{ matrix.arch }}
        path: CelesTLSH-CLI${{ matrix.extension }}
    
    # Rename the binary for the release
    - name: Prepare for release
      run: |
        mkdir -p release
        mv CelesTLSH-CLI${{ matrix.extension }} release/CelesTLSH-CLI-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}

    # Upload binaries to the release if this is a tag
    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
